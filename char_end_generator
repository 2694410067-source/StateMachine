module char_end_generator(
    input  wire        pix_clk,   
    input  wire        rst_n,      
    input  wire        valid,     
    input  wire [9:0]  h_cnt,      
    input  wire [9:0]  v_cnt,      
    output reg         pixel_data  
);

// 字符显示参数（8×16点阵，默认大小）
localparam CHAR_X_START = 280;  
localparam CHAR_Y_START = 232;    
localparam CHAR_WIDTH   = 8;      
localparam CHAR_HEIGHT  = 16;     
localparam CHAR_SPACE   = 2;      





localparam [15:0][7:0] CHAR_E = {
8'b00000000,
8'b00000000,
8'b00000000,
8'b11111110,
8'b10000000,
8'b10000000,
8'b10000000,
8'b10000000,
8'b11111111,
8'b10000000,
8'b10000000,
8'b10000000,
8'b10000000,
8'b11111110,
8'b00000000,
8'b00000000,
};


localparam [15:0][7:0] CHAR_N = {
    8'b00000000,
	 8'b00000000,
	 8'b00000000,
	 8'b10000010,
    8'b11000010, 
	 8'b10100010,
	 8'b10100010, 
	 8'b10110010,
    8'b10010010, 
	 8'b10011010, 
	 8'b10001010, 
	 8'b10001010,
    8'b10000110, 
	 8'b10000010, 
	 8'b00000000,
	 8'b00000000
};


localparam [15:0][7:0] CHAR_D = {
    8'b00000000, 
	 8'b00000000, 
	 8'b00000000, 
	 8'b11111000,
    8'b10000100, 
	 8'b10000010, 
	 8'b10000010, 
	 8'b10000010,
    8'b10000010, 
	 8'b10000010, 
	 8'b10000010, 
	 8'b10000010,
    8'b10000110, 
	 8'b11111100, 
	 8'b00000000, 
	 8'b00000000
};



reg [3:0] row_offset;     // 字符内行偏移（0~15）
reg [2:0] col_offset;     // 字符内列偏移（0~7）




always @(*) begin
    if(!rst_n || !valid) begin
        pixel_data = 1'b0;
    end else begin
        
        if(v_cnt >= CHAR_Y_START && v_cnt < CHAR_Y_START + CHAR_HEIGHT) begin
         
		row_offset = (CHAR_HEIGHT - 1) - (v_cnt - CHAR_Y_START);  
            
            
            if(h_cnt >= CHAR_X_START && h_cnt < CHAR_X_START + CHAR_WIDTH) begin
                col_offset = h_cnt - CHAR_X_START; 
                pixel_data = CHAR_E[row_offset][7 - col_offset];  
            end
            
            else if(h_cnt >= CHAR_X_START + CHAR_WIDTH + CHAR_SPACE 
                 && h_cnt < CHAR_X_START + 2*CHAR_WIDTH + CHAR_SPACE) begin
                col_offset = h_cnt - (CHAR_X_START + CHAR_WIDTH + CHAR_SPACE);
                pixel_data = CHAR_N[row_offset][7 - col_offset];
            end
            
            else if(h_cnt >= CHAR_X_START + 2*CHAR_WIDTH + 2*CHAR_SPACE 
                 && h_cnt < CHAR_X_START + 3*CHAR_WIDTH + 2*CHAR_SPACE) begin
                col_offset = h_cnt - (CHAR_X_START + 2*CHAR_WIDTH + 2*CHAR_SPACE);
                pixel_data = CHAR_D[row_offset][7 - col_offset];
            end
          
            else begin
                pixel_data = 1'b0;  
            end
        end
        else begin
            pixel_data = 1'b0;  
        end
    end
end



endmodule
